name: Checklist

on: [pull_request]

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'CHANGELOG.md';
            const changelog = fs.readFileSync(path, 'utf8');
            const errors = [];

            // Check each line that starts with '##' for the version & date format
            changelog.split('\n').forEach((line, index) => {
              index += 1;

              if (!line.startsWith('## '))
                return;

              if (line.toLowerCase().includes('unreleased')) {
                const message = `Unreleased section found at line ${index}: ${line}`;
                const command = `::error file=${path},line=${index},endLine=${index},title=Unreleased Section Found::${message}`;
                console.log(command);
                errors.push(message);
              }

              // Expected format: '## [X.Y.Z] - YYYY-MM-DD'
              const pattern = /^\d+\.\d+\.\d+ - \d{4}-\d{2}-\d{2}$/;
              if (pattern.test(line)) {
                const message = `Invalid version/date format at line ${index}: ${line}`;
                const command = `::error file=${path},line=${index},endLine=${index},title=Invalid Version/Date Format::${message}`;
                console.log(command);
                errors.push(message);
              }
            });

            if (errors.length > 0) {
              throw new Error(errors.join('\n'));
            }
            
  draft:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        with:
          script: |
            const forbiddenLabels = ['draft'];
            let labels = context.payload.pull_request.labels;

            if (labels.some(l => forbiddenLabels.includes(l.name))) {
                const message = `Forbidden labels detected: ${forbiddenLabels.join(', ')}`;
                const command = `::error file=${__filename},line=1,endLine=1,title=Forbidden Labels Detected::${message}`;
                console.log(command);
                throw new Error(message);
            }

  